table {
    display: table;
    width: 100%;
    border-collapse: separate;
    box-sizing: border-box;
    text-indent: initial;
    border-spacing: 2px;
    border-color: gray;
}

tbody {
    display: table-row-group;
    vertical-align: middle;
    border-color: inherit;
}

tr {
    display: table-row;
    vertical-align: inherit;
    border-color: inherit;
    font-weight: bold;
}

table.data td:first-child {
    text-align: left;
}

table.data td {
    text-align: right;
}

table td {
    font: 600 16px D-DIN-Regular,Arial,Verdana,sans-serif;
    color: #fff;
    padding: 20px 0;
    border-bottom: 1pt solid rgba(255,255,255,.3);
}

td {
    display: table-cell;
    vertical-align: inherit;
}

.swiper-dots {
    z-index: 2;
    left: 0;
    right: 0;
    margin: auto;
    
}

.description, .swiper-dots {
    text-align: center;
    position: absolute;
}

.swiper-container {
    list-style: none;
}

.gallery-prev {
    left: 50px;
    right: auto;
}

#featured-next, .gallery-next {
    right: 50px;
    left: auto;
}
.gallery-next, .gallery-prev {
    position: absolute;
    width: 27px;
    z-index: 10;
    cursor: pointer;

    -webkit-transition: all 0.4s ease-in-out;
    -moz-transition: all 0.4s ease-in-out;
    -ms-transition: all 0.4s ease-in-out;
    -o-transition: all 0.4s ease-in-out;
    transition: all 0.4s ease-in-out;
}

.swiper-pagination-bullet.swiper-pagination-bullet-active {
    opacity: 1;
}
.swiper-pagination-clickable .swiper-pagination-bullet {
    cursor: pointer;
}
.swiper-pagination-bullet {
    margin: 0 5px;
    /* background: #fff!important; */
    /* opacity: .5; */
    -webkit-transition: opacity .2s linear;
    transition: opacity .2s linear;
    width: 8px;
    height: 8px;
    display: inline-block;
    border-radius: 100%;
    background: #3b3b3b;
}

/* .carousel {
    position: relative;
} */

.swiper-pagination-bullet--selected {
    background: #fff!important;
}

/* .carousel-item {
    display: none;
}

.carousel-item--selected {
    display: block;
} */

table.data td:first-child {
    font: 15px d-din-Bold,Arial,Verdana,sans-serif;
    text-align: left;
}

h2 {
    font: 46px/50px D-DIN-Bold,Arial,Verdana,sans-serif;
    font-weight: 400;
    font-style: normal;
    margin: auto;
    text-transform: uppercase;
}

.slider-desc {
    font-family: D-DIN;
    line-height: 1.6;
    font-size: 0.9em;
    margin-bottom: 5px;
}




*,
*:before,
*:after {
  -webkit-box-sizing: border-box;
     -moz-box-sizing: border-box;
          box-sizing: border-box;
}

.slider-container {
  position: relative;
  overflow: hidden;
  width: 100%;
  margin: 0 auto;
  /* -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none; */
}

.slider {
  position: relative;
  /* width: 9999px; */
}
.slider:before,
.slider:after {
  display: table;
  content: ' ';
}
.slider:after {
  clear: both;
}
.slider__item {
  position: relative;
  float: left;
  margin: 0;
  padding: 0;
  height: 100%;
}

.slider__switch span {
  color: #fff;
  display: block;
  width: 32px;
  height: 32px;
}
/* Arrows */
.slider__switch {
  position: absolute;
  top: 50%;
  margin-top: -20px;
  padding: 10px 5px;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
       -o-user-select: none;
          user-select: none;
  border-radius: 1px;
  background: #000;
  opacity: .3;
  transition: opacity .15s ease;
  fill: #fff;
}
.slider__switch--prev {
  left: 10px;
}
.slider__switch--next {
  right: 10px;
}

.slider__switch:hover {
  opacity: .85;
}
.slider__switch[disabled] {
  visibility: hidden;
  opacity: 0;
}
.slider-nav {
  line-height: 30px;
  position: absolute;
  bottom: 0;
  left: 0;

  width: 100%;
  height: 30px;
  margin: 0;
  padding: 0;
  text-align: center;
  z-index: 99999;
  filter: alpha(opacity=90); /* ie8 */
}
.slider-nav__control {
  display: inline-block;
  width: 12px;
  height: 12px;
  margin: 0 3px;
  -webkit-transition: background .5s ease;
     -moz-transition: background .5s ease;
       -o-transition: background .5s ease;
          transition: background .5s ease;
  border: 2px solid #fff;
  border-radius: 50%;
  background: transparent;
}

.slider-nav__control.is-active {
  width: 12px;
  height: 12px;
  background: #fff;
}
.slider.has-touch {
  cursor: move;
  cursor: -webkit-grabbing;
  cursor:    -moz-grabbing;
}
@media (max-width: 580px) {
  .slider__switch {
    display: none;
  }
  .slider__caption {
    display: none;
  }
}

.accordion .container {
    position: relative;
    margin: 10px 10px;
  }
  
  /* Positions the labels relative to the .container. Adds padding to the top and bottom and increases font size. Also makes its cursor a pointer */
  
  .accordion .label {
    position: relative;
    padding: 10px 0;
    font-size: 30px;
    cursor: pointer;
  }

  /* Positions the plus sign 5px from the right. Centers it using the transform property. */

.accordion .label::before {
    content: '+';
    position: absolute;
    top: 50%;
    right: 10px;
    font-size: 30px;
    transform: translateY(-50%);
  }
  
  /* Hides the content (height: 0), decreases font size, justifies text and adds transition */
  
  .accordion .content {
    position: relative;
    height: 0;
    font-size: 20px;
    text-align: justify;
    width: 780px;
    overflow: hidden;
    transition: 0.5s;
  }
  
  /* Adds a horizontal line between the contents */
  
  .accordion hr {
    width: 100;
    margin-left: 0;
    border: 1px solid grey;
  }


  /* Unhides the content part when active. Sets the height */

.accordion .container.active .content {
    height: 200px;
    margin-top: 10px;
  }
  
/* Changes from plus sign to negative sign once active */

.accordion .container.active .label::before {
    content: '-';
    font-size: 30px;
}


.img-hotspot {
    position: relative;
}

.img-hotspot img {
    max-width: 100%;
}

.icon {
    width: 20px;
    height: 20px;
    border-radius: 100%;
    background-color: black;
    border: 1px solid white;
    cursor: pointer;
}

.icon:after {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, 50%) scale(1, 1);
    pointer-events: none;
    content: "";
    display: block;
}

.img-item {
    position: absolute;
    transform: translate(-50%, 50%);
}